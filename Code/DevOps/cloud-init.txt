#cloud-config
package_update: true

packages:
  - docker.io
  - docker-compose

system_info:
  default_user:
    groups: [docker]

write_files:
  - path: /tmp/config.json
    permissions: '0600'
    owner: root:root
    content: |
      {
        "auths": {
          "https://index.docker.io/v1/": {
            "auth": "dHN1cHJvamVjdDpARmluYW5jZXIhISE="
          }
        }
      }
  
  - path: /home/azagent/financer/.env
    permissions: '0777'
    owner: root:root
    content: |
      DATABASE_NAME=
      DATABASE_USER=
      DATABASE_PASSWORD=
      DATABASE_PORT=5432
      NODE_ENV=development
      PORT=80

  - path: /home/azagent/financer/docker-compose.yml
    permissions: '0777'
    owner: root:root
    content: |
      version: '3.8'
      services:
        postgres:
          image: postgres:16-alpine
          container_name: financer-postgres
          environment:
            POSTGRES_DB: ${DATABASE_NAME}
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
          ports:
            - '${DATABASE_PORT}:5432'
          volumes:
            - postgres_data:/var/lib/postgresql/data
          restart: unless-stopped
          healthcheck:
            test: ['CMD-SHELL', 'pg_isready -U ${DATABASE_USER} -d ${DATABASE_NAME}']
            interval: 30s
            timeout: 10s
            retries: 5
            start_period: 30s

        financer:
          image: tsuproject/financer:latest
          container_name: financer-backend
          ports:
            - '${PORT}:3000'
          environment:
            - NODE_ENV=${NODE_ENV}
            - PORT=3000
            - DATABASE_HOST=postgres
            - DATABASE_PORT=5432
            - DATABASE_NAME=${DATABASE_NAME}
            - DATABASE_USER=${DATABASE_USER}
            - DATABASE_PASSWORD=${DATABASE_PASSWORD}
            - OPENAI_API_KEY=${OPENAI_KEY}
          depends_on:
            postgres:
              condition: service_healthy
          restart: unless-stopped
          command: sh -c "if [ \"$$NODE_ENV\" = \"development\" ]; then npm run start:dev; else npm run start:prod; fi"
          healthcheck:
            test: ["CMD", "curl", "-f", "http://localhost:3000"]
            interval: 30s
            timeout: 10s
            retries: 3
            start_period: 40s

      volumes:
        postgres_data:
        financer_node_modules:

runcmd:
  - usermod -aG docker azagent
  - chmod 666 /var/run/docker.sock
  - mkdir -p /home/azagent/.docker
  - mv /tmp/config.json /home/azagent/.docker/config.json
  - chown -R azagent:azagent /home/azagent
  - su - azagent -c "cd /home/azagent/financer && docker-compose --env-file .env up -d"
